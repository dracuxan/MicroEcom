basePath: /
consumes:
    - application/json
definitions:
    GenericError:
        description: GenericError GenericError GenericError GenericError is a generic error message returned in the response
        properties:
            message:
                description: message
                type: string
                x-go-name: Message
        type: object
        x-go-package: MicroEcom/sdk/models
    GenericMessage:
        description: GenericMessage GenericMessage GenericMessage generic message
        properties:
            message:
                description: message
                type: string
                x-go-name: Message
        type: object
        x-go-package: MicroEcom/sdk/models
    Product:
        properties:
            description:
                description: Description of the product
                type: string
                x-go-name: Description
            id:
                description: ID of the product
                format: int64
                type: integer
                x-go-name: ID
            name:
                description: Name of the product
                type: string
                x-go-name: Name
            price:
                description: Price of the product
                format: double
                minimum: 1
                type: number
                x-go-name: Price
            sku:
                description: SKU of the Product
                pattern: '[A-Z]+-[0-9]+'
                type: string
                x-go-name: SKU
        required:
            - name
            - price
            - sku
        title: Product struct defines a product in the inventory.
        type: object
        x-go-package: MicroEcom/db
info:
    title: Documentation for MicroEcom
    version: 1.0.0
paths:
    /products:
        get:
            operationId: GetProducts
            responses:
                "200":
                    $ref: '#/responses/productsResponse'
                "405":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: GetProducts handles the retrieval of products.
            tags:
                - Products
        post:
            operationId: createProduct
            parameters:
                - description: The product to create
                  in: body
                  name: product
                  required: true
                  schema:
                    $ref: '#/definitions/Product'
                  x-go-name: Product
            responses:
                "201":
                    $ref: '#/responses/newProductResponse'
                "400":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: CreateProduct handles the creation of a new products.
            tags:
                - Products
    /products/{id}:
        delete:
            operationId: deleteProduct
            parameters:
                - description: The ID of the product to delete
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
            responses:
                "200":
                    $ref: '#/responses/deleteProductResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: DeleteProduct deletes a product by ID
            tags:
                - Products
        put:
            operationId: updateProduct
            parameters:
                - description: The ID of the product to update
                  format: int64
                  in: path
                  name: id
                  required: true
                  type: integer
                  x-go-name: ID
                - description: The product to update
                  in: body
                  name: product
                  required: true
                  schema:
                    $ref: '#/definitions/Product'
                  x-go-name: Product
            responses:
                "200":
                    $ref: '#/responses/updateProductResponse'
                "404":
                    $ref: '#/responses/errorResponse'
                "500":
                    $ref: '#/responses/errorResponse'
            summary: UpdateProduct updates a product by ID
            tags:
                - Products
produces:
    - application/json
responses:
    deleteProductResponse:
        description: Response for the delete operation
        schema:
            $ref: '#/definitions/GenericMessage'
    errorResponse:
        description: Error response for various operations
        schema:
            $ref: '#/definitions/GenericError'
    newProductResponse:
        description: New product response with the product ID
        schema:
            $ref: '#/definitions/GenericMessage'
    productsResponse:
        description: A list of products returned in the response
        schema:
            items:
                $ref: '#/definitions/Product'
            type: array
    updateProductResponse:
        description: Updated product response with the product ID
        schema:
            $ref: '#/definitions/GenericMessage'
schemes:
    - http
swagger: "2.0"
