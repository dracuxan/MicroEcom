// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"MicroEcom/sdk/models"
)

// DeleteProductReader is a Reader for the DeleteProduct structure.
type DeleteProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProductOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProductInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /products/{id}] deleteProduct", response, response.Code())
	}
}

// NewDeleteProductOK creates a DeleteProductOK with default headers values
func NewDeleteProductOK() *DeleteProductOK {
	return &DeleteProductOK{}
}

/*
DeleteProductOK describes a response with status code 200, with default header values.

Response for the delete operation
*/
type DeleteProductOK struct {
	Payload *models.GenericMessage
}

// IsSuccess returns true when this delete product o k response has a 2xx status code
func (o *DeleteProductOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete product o k response has a 3xx status code
func (o *DeleteProductOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product o k response has a 4xx status code
func (o *DeleteProductOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product o k response has a 5xx status code
func (o *DeleteProductOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product o k response a status code equal to that given
func (o *DeleteProductOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete product o k response
func (o *DeleteProductOK) Code() int {
	return 200
}

func (o *DeleteProductOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductOK %s", 200, payload)
}

func (o *DeleteProductOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductOK %s", 200, payload)
}

func (o *DeleteProductOK) GetPayload() *models.GenericMessage {
	return o.Payload
}

func (o *DeleteProductOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductNotFound creates a DeleteProductNotFound with default headers values
func NewDeleteProductNotFound() *DeleteProductNotFound {
	return &DeleteProductNotFound{}
}

/*
DeleteProductNotFound describes a response with status code 404, with default header values.

Error response for various operations
*/
type DeleteProductNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this delete product not found response has a 2xx status code
func (o *DeleteProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product not found response has a 3xx status code
func (o *DeleteProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product not found response has a 4xx status code
func (o *DeleteProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete product not found response has a 5xx status code
func (o *DeleteProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product not found response a status code equal to that given
func (o *DeleteProductNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete product not found response
func (o *DeleteProductNotFound) Code() int {
	return 404
}

func (o *DeleteProductNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound %s", 404, payload)
}

func (o *DeleteProductNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound %s", 404, payload)
}

func (o *DeleteProductNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *DeleteProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductInternalServerError creates a DeleteProductInternalServerError with default headers values
func NewDeleteProductInternalServerError() *DeleteProductInternalServerError {
	return &DeleteProductInternalServerError{}
}

/*
DeleteProductInternalServerError describes a response with status code 500, with default header values.

Error response for various operations
*/
type DeleteProductInternalServerError struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this delete product internal server error response has a 2xx status code
func (o *DeleteProductInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product internal server error response has a 3xx status code
func (o *DeleteProductInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product internal server error response has a 4xx status code
func (o *DeleteProductInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product internal server error response has a 5xx status code
func (o *DeleteProductInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete product internal server error response a status code equal to that given
func (o *DeleteProductInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete product internal server error response
func (o *DeleteProductInternalServerError) Code() int {
	return 500
}

func (o *DeleteProductInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductInternalServerError %s", 500, payload)
}

func (o *DeleteProductInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductInternalServerError %s", 500, payload)
}

func (o *DeleteProductInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *DeleteProductInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
